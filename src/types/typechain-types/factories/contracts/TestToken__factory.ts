/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { TestToken, TestTokenInterface } from "../../contracts/TestToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516120923803806120928339818101604052810190610032919061069b565b83838381600390816100449190610951565b5080600490816100549190610951565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c95760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100c09190610a32565b60405180910390fd5b6100d88161011660201b60201c565b5061010d846100eb6101dc60201b60201c565b600a6100f79190610bbc565b836101029190610c07565b6101e560201b60201c565b50505050610cde565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102575760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161024e9190610a32565b60405180910390fd5b6102696000838361026d60201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036102bf5780600260008282546102b39190610c49565b92505081905550610392565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561034b578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161034293929190610c8c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103db5780600260008282540392505081905550610428565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104859190610cc3565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104d1826104a6565b9050919050565b6104e1816104c6565b81146104ec57600080fd5b50565b6000815190506104fe816104d8565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105578261050e565b810181811067ffffffffffffffff821117156105765761057561051f565b5b80604052505050565b6000610589610492565b9050610595828261054e565b919050565b600067ffffffffffffffff8211156105b5576105b461051f565b5b6105be8261050e565b9050602081019050919050565b60005b838110156105e95780820151818401526020810190506105ce565b60008484015250505050565b60006106086106038461059a565b61057f565b90508281526020810184848401111561062457610623610509565b5b61062f8482856105cb565b509392505050565b600082601f83011261064c5761064b610504565b5b815161065c8482602086016105f5565b91505092915050565b6000819050919050565b61067881610665565b811461068357600080fd5b50565b6000815190506106958161066f565b92915050565b600080600080608085870312156106b5576106b461049c565b5b60006106c3878288016104ef565b945050602085015167ffffffffffffffff8111156106e4576106e36104a1565b5b6106f087828801610637565b935050604085015167ffffffffffffffff811115610711576107106104a1565b5b61071d87828801610637565b925050606061072e87828801610686565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061078c57607f821691505b60208210810361079f5761079e610745565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108077fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826107ca565b61081186836107ca565b95508019841693508086168417925050509392505050565b6000819050919050565b600061084e61084961084484610665565b610829565b610665565b9050919050565b6000819050919050565b61086883610833565b61087c61087482610855565b8484546107d7565b825550505050565b600090565b610891610884565b61089c81848461085f565b505050565b5b818110156108c0576108b5600082610889565b6001810190506108a2565b5050565b601f821115610905576108d6816107a5565b6108df846107ba565b810160208510156108ee578190505b6109026108fa856107ba565b8301826108a1565b50505b505050565b600082821c905092915050565b60006109286000198460080261090a565b1980831691505092915050565b60006109418383610917565b9150826002028217905092915050565b61095a8261073a565b67ffffffffffffffff8111156109735761097261051f565b5b61097d8254610774565b6109888282856108c4565b600060209050601f8311600181146109bb57600084156109a9578287015190505b6109b38582610935565b865550610a1b565b601f1984166109c9866107a5565b60005b828110156109f1578489015182556001820191506020850194506020810190506109cc565b86831015610a0e5784890151610a0a601f891682610917565b8355505b6001600288020188555050505b505050505050565b610a2c816104c6565b82525050565b6000602082019050610a476000830184610a23565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115610ad357808604811115610aaf57610aae610a4d565b5b6001851615610abe5780820291505b8081029050610acc85610a7c565b9450610a93565b94509492505050565b600082610aec5760019050610ba8565b81610afa5760009050610ba8565b8160018114610b105760028114610b1a57610b49565b6001915050610ba8565b60ff841115610b2c57610b2b610a4d565b5b8360020a915084821115610b4357610b42610a4d565b5b50610ba8565b5060208310610133831016604e8410600b8410161715610b7e5782820a905083811115610b7957610b78610a4d565b5b610ba8565b610b8b8484846001610a89565b92509050818404811115610ba257610ba1610a4d565b5b81810290505b9392505050565b600060ff82169050919050565b6000610bc782610665565b9150610bd283610baf565b9250610bff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610adc565b905092915050565b6000610c1282610665565b9150610c1d83610665565b9250828202610c2b81610665565b91508282048414831517610c4257610c41610a4d565b5b5092915050565b6000610c5482610665565b9150610c5f83610665565b9250828201905080821115610c7757610c76610a4d565b5b92915050565b610c8681610665565b82525050565b6000606082019050610ca16000830186610a23565b610cae6020830185610c7d565b610cbb6040830184610c7d565b949350505050565b6000602082019050610cd86000830184610c7d565b92915050565b6113a580610ced6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063715018a61161008c578063a0712d6811610066578063a0712d6814610204578063a9059cbb14610220578063dd62ed3e14610250578063f2fde38b14610280576100cf565b8063715018a6146101be5780638da5cb5b146101c857806395d89b41146101e6576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806370a082311461018e575b600080fd5b6100dc61029c565b6040516100e99190610e0c565b60405180910390f35b61010c60048036038101906101079190610ec7565b61032e565b6040516101199190610f22565b60405180910390f35b61012a610351565b6040516101379190610f4c565b60405180910390f35b61015a60048036038101906101559190610f67565b61035b565b6040516101679190610f22565b60405180910390f35b61017861038a565b6040516101859190610fd6565b60405180910390f35b6101a860048036038101906101a39190610ff1565b610393565b6040516101b59190610f4c565b60405180910390f35b6101c66103db565b005b6101d06103ef565b6040516101dd919061102d565b60405180910390f35b6101ee610419565b6040516101fb9190610e0c565b60405180910390f35b61021e60048036038101906102199190611048565b6104ab565b005b61023a60048036038101906102359190610ec7565b6104de565b6040516102479190610f22565b60405180910390f35b61026a60048036038101906102659190611075565b610501565b6040516102779190610f4c565b60405180910390f35b61029a60048036038101906102959190610ff1565b610588565b005b6060600380546102ab906110e4565b80601f01602080910402602001604051908101604052809291908181526020018280546102d7906110e4565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b60008061033961060e565b9050610346818585610616565b600191505092915050565b6000600254905090565b60008061036661060e565b9050610373858285610628565b61037e8585856106bd565b60019150509392505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6103e36107b1565b6103ed6000610838565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610428906110e4565b80601f0160208091040260200160405190810160405280929190818152602001828054610454906110e4565b80156104a15780601f10610476576101008083540402835291602001916104a1565b820191906000526020600020905b81548152906001019060200180831161048457829003601f168201915b5050505050905090565b6104b36107b1565b6104db336104bf61038a565b600a6104cb9190611277565b836104d691906112c2565b6108fe565b50565b6000806104e961060e565b90506104f68185856106bd565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6105906107b1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106025760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105f9919061102d565b60405180910390fd5b61060b81610838565b50565b600033905090565b6106238383836001610980565b505050565b60006106348484610501565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156106b757818110156106a7578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161069e93929190611304565b60405180910390fd5b6106b684848484036000610980565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361072f5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610726919061102d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107a15760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610798919061102d565b60405180910390fd5b6107ac838383610b57565b505050565b6107b961060e565b73ffffffffffffffffffffffffffffffffffffffff166107d76103ef565b73ffffffffffffffffffffffffffffffffffffffff1614610836576107fa61060e565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161082d919061102d565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109705760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610967919061102d565b60405180910390fd5b61097c60008383610b57565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109f25760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109e9919061102d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a645760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a5b919061102d565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b51578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b489190610f4c565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ba9578060026000828254610b9d919061133b565b92505081905550610c7c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c35578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c2c93929190611304565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cc55780600260008282540392505081905550610d12565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d6f9190610f4c565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610db6578082015181840152602081019050610d9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dde82610d7c565b610de88185610d87565b9350610df8818560208601610d98565b610e0181610dc2565b840191505092915050565b60006020820190508181036000830152610e268184610dd3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e5e82610e33565b9050919050565b610e6e81610e53565b8114610e7957600080fd5b50565b600081359050610e8b81610e65565b92915050565b6000819050919050565b610ea481610e91565b8114610eaf57600080fd5b50565b600081359050610ec181610e9b565b92915050565b60008060408385031215610ede57610edd610e2e565b5b6000610eec85828601610e7c565b9250506020610efd85828601610eb2565b9150509250929050565b60008115159050919050565b610f1c81610f07565b82525050565b6000602082019050610f376000830184610f13565b92915050565b610f4681610e91565b82525050565b6000602082019050610f616000830184610f3d565b92915050565b600080600060608486031215610f8057610f7f610e2e565b5b6000610f8e86828701610e7c565b9350506020610f9f86828701610e7c565b9250506040610fb086828701610eb2565b9150509250925092565b600060ff82169050919050565b610fd081610fba565b82525050565b6000602082019050610feb6000830184610fc7565b92915050565b60006020828403121561100757611006610e2e565b5b600061101584828501610e7c565b91505092915050565b61102781610e53565b82525050565b6000602082019050611042600083018461101e565b92915050565b60006020828403121561105e5761105d610e2e565b5b600061106c84828501610eb2565b91505092915050565b6000806040838503121561108c5761108b610e2e565b5b600061109a85828601610e7c565b92505060206110ab85828601610e7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110fc57607f821691505b60208210810361110f5761110e6110b5565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111561119b5780860481111561117757611176611115565b5b60018516156111865780820291505b808102905061119485611144565b945061115b565b94509492505050565b6000826111b45760019050611270565b816111c25760009050611270565b81600181146111d857600281146111e257611211565b6001915050611270565b60ff8411156111f4576111f3611115565b5b8360020a91508482111561120b5761120a611115565b5b50611270565b5060208310610133831016604e8410600b84101617156112465782820a90508381111561124157611240611115565b5b611270565b6112538484846001611151565b9250905081840481111561126a57611269611115565b5b81810290505b9392505050565b600061128282610e91565b915061128d83610fba565b92506112ba7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846111a4565b905092915050565b60006112cd82610e91565b91506112d883610e91565b92508282026112e681610e91565b915082820484148315176112fd576112fc611115565b5b5092915050565b6000606082019050611319600083018661101e565b6113266020830185610f3d565b6113336040830184610f3d565b949350505050565b600061134682610e91565b915061135183610e91565b925082820190508082111561136957611368611115565b5b9291505056fea264697066735822122099f862c899159fa4b7bc9e58009aac5c01734d94d5fdcb3eb43d0337a1cbfde164736f6c634300081c0033";

type TestTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestToken__factory extends ContractFactory {
  constructor(...args: TestTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialOwner,
      name,
      symbol,
      initialSupply,
      overrides || {}
    );
  }
  override deploy(
    initialOwner: AddressLike,
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialOwner,
      name,
      symbol,
      initialSupply,
      overrides || {}
    ) as Promise<
      TestToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestToken__factory {
    return super.connect(runner) as TestToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestTokenInterface {
    return new Interface(_abi) as TestTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestToken {
    return new Contract(address, _abi, runner) as unknown as TestToken;
  }
}
